{"version":3,"sources":["component/BidCard.js","component/Pagination.js","component/CustomerBids.js","App.js","reportWebVitals.js","index.js"],"names":["BidCard","data","showMax","bid","to","id","className","src","avatarUrl","alt","firstname","lastname","email","phone","hasPremium","highest","lowest","Pagination","RenderComponent","highestBid","lowestBid","pageLimit","dataLimit","show","useState","Math","round","length","pages","currentPage","setCurrentPage","changePage","event","pageNumber","Number","target","textContent","startIndex","endIndex","slice","getPaginatedData","map","d","idx","onClick","page","start","floor","Array","fill","_","getPaginationGroup","item","index","withRouter","props","match","params","userBid","filter","obj","console","log","bids","carTitle","amount","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","fontWeight","App","classes","maxBid","setMaxBid","minBid","setMinBid","setUserBid","setShowMax","useEffect","fetch","then","result","a","json","res","i","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","j","max","min","sort","b","AppBar","position","Toolbar","Typography","variant","Button","color","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1c04dcf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst BidCard = ({ data, showMax }) => {\n  let bid = data;\n  return (\n    // <div className='bidCards'>\n    <>\n      {\n        showMax === true ? (\n          // data.map((bid, idx) => {\n          //     return (\n          <Link to={`/bids/${bid.id}`} className='bidCard'>\n            <img src={bid.avatarUrl} alt='' className='bidCard__avatar' />\n            <p className='bidCard__name'>\n              Full Name: {bid.firstname} {bid.lastname}\n            </p>\n            <p className='bidCard__name'>Email: {bid.email}</p>\n            <p className='bidCard__name'>Phone: {bid.phone}</p>\n            <p className='bidCard__name'>\n              Premium: {bid.hasPremium ? 'Yes' : 'No'}\n            </p>\n            <p className='bidCard__name'>Highed Bid: {bid.highest}</p>\n          </Link>\n        ) : (\n          //   );\n          // })\n          // data.map((bid, idx) => {\n          //     return (\n          <Link to={`/bids/${bid.id}`} key={bid.id} className='bidCard'>\n            <img src={bid.avatarUrl} alt='' className='bidCard__avatae' />\n            <p className='bidCard__name'>\n              Full Name: {bid.firstname} {bid.lastname}\n            </p>\n            <p className='bidCard__name'>Email: {bid.email}</p>\n            <p className='bidCard__name'>Phone: {bid.phone}</p>\n            <p className='bidCard__name'>\n              Premium: {bid.hasPremium ? 'Yes' : 'No'}\n            </p>\n            <p className='bidCard__name'>Lowest Bid: {bid.lowest}</p>\n          </Link>\n        )\n        //   );\n        // })\n      }\n    </>\n    // </div>\n  );\n};\n\nexport default BidCard;\n","import React, { useState } from 'react';\n\nconst Pagination = ({\n  data,\n  RenderComponent,\n  highestBid,\n  lowestBid,\n  pageLimit,\n  dataLimit,\n  show,\n}) => {\n  // console.log(data);\n  const [pages] = useState(Math.round(data?.length / dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function goToNextPage() {\n    setCurrentPage((page) => page + 1);\n  }\n\n  function goToPreviousPage() {\n    setCurrentPage((page) => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    let res = null;\n\n    if (show) res = highestBid;\n    else res = lowestBid;\n\n    // console.log(res);\n    return res?.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return (\n    <>\n      <div className='bidCards'>\n        {getPaginatedData()?.map((d, idx) => (\n          <RenderComponent key={idx} data={d} showMax={show} />\n        ))}\n      </div>\n\n      <div className='pagination'>\n        {/* previous button */}\n        <button\n          onClick={goToPreviousPage}\n          className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\n        >\n          prev\n        </button>\n\n        {/* show page numbers */}\n        {getPaginationGroup().map((item, index) => (\n          <button\n            key={index}\n            onClick={changePage}\n            className={`paginationItem ${\n              currentPage === item ? 'active' : null\n            }`}\n          >\n            <span>{item}</span>\n          </button>\n        ))}\n\n        {/* next button */}\n        <button\n          onClick={goToNextPage}\n          className={`next ${currentPage === pages ? 'disabled' : ''}`}\n        >\n          next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst CustomerBids = (props) => {\n  let id = props.match.params.id;\n  let userBid = props.data?.filter((obj) => obj.id === id)[0];\n  console.log(userBid);\n\n  return (\n    <div className='customer'>\n      <img src={userBid.avatarUrl} alt='' className='customer__avatar' />\n      <p className='customer__name'>\n        Name: {userBid?.firstname} {userBid?.lastname}\n      </p>\n      <p className='customer__name'>Email: {userBid?.email}</p>\n      <p className='customer__name'>Phone: {userBid?.phone}</p>\n      <p className='customer__name'>\n        Premium: {userBid?.hasPremium ? 'Yes' : 'No'}\n      </p>\n      <p className='customer__name'>Highed Bid: {userBid?.highest}</p>\n      <p className='customer__name'>Lowest Bid: {userBid?.lowest}</p>\n\n      <div className='customer__bids'>\n        {userBid.bids.map((bid, idx) => {\n          return (\n            <div className='customer__bid' key={bid.id}>\n              <p className='customer__bid--carTitle'>\n                Car Title: {bid.carTitle}\n              </p>\n              <p className='customer__bid--amount'>Amount: {bid.amount}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(CustomerBids);\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport BidCard from './component/BidCard';\nimport Paginate from './component/Pagination';\nimport CustomerBids from './component/CustomerBids';\n\nimport './App.css';\nimport './sass/main.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n    fontWeight: 'bold',\n  },\n}));\n\nconst App = (props) => {\n  const classes = useStyles();\n\n  const [maxBid, setMaxBid] = useState(null);\n  const [minBid, setMinBid] = useState(null);\n  const [userBid, setUserBid] = useState(null);\n  const [showMax, setShowMax] = useState(true);\n\n  useEffect(() => {\n    fetch('https://intense-tor-76305.herokuapp.com/merchants').then(\n      async (result) => {\n        let res = await result.json();\n        // console.log(res);\n        setUserBid(res);\n\n        for (let i = 0; i < res.length; i++) {\n          let lowest = Number.MAX_SAFE_INTEGER + 1,\n            highest = Number.MIN_SAFE_INTEGER + 1;\n\n          for (let j = 0; j < res[i].bids.length; j++) {\n            if (lowest > res[i].bids[j].amount) {\n              lowest = res[i].bids[j].amount;\n            }\n            if (highest < res[i].bids[j].amount) {\n              highest = res[i].bids[j].amount;\n            }\n          }\n\n          if (highest < 0) highest = 0;\n          if (lowest > Number.MAX_SAFE_INTEGER) lowest = 0;\n\n          res[i].highest = highest;\n          res[i].lowest = lowest;\n        }\n\n        // console.log(res);\n        let max = [...res];\n        let min = [...res];\n        setMaxBid(max.sort((a, b) => b.highest - a.highest));\n        setMinBid(min.sort((a, b) => a.lowest - b.lowest));\n      }\n    );\n  }, []);\n  return (\n    <Router>\n      <div className='App'>\n        {/* <button onClick={() => setShowMax((showMax) => !showMax)}>\n          Swith Bid Amount Order\n        </button> */}\n        <AppBar position='sticky'>\n          <Toolbar>\n            <Typography variant='h6' className={classes.title}>\n              Biding Site\n            </Typography>\n            <Button\n              color='inherit'\n              onClick={() => setShowMax((showMax) => !showMax)}\n            >\n              Toggle\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route exact path='/'>\n            <Paginate\n              data={userBid}\n              RenderComponent={BidCard}\n              highestBid={maxBid}\n              lowestBid={minBid}\n              title='Post'\n              pageLimit={3}\n              dataLimit={5}\n              show={showMax}\n            />\n          </Route>\n          {/* <Route path={'/bids'} component={CustomerBids} /> */}\n          <Route path='/bids/:id'>\n            <CustomerBids data={userBid} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}